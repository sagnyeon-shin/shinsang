(1) 관리자 접속
C:\Users\woongkeun>sqlplus

Enter user-name: system
Enter password:1234


(2)테이블스페이스 확인
SQL> select tablespace_name, status FROM dba_tablespaces;

TABLESPACE_NAME                                              STATUS
------------------------------------------------------------ ------------------
SYSTEM                                                       ONLINE
SYSAUX                                                       ONLINE
UNDOTBS1                                                     ONLINE
TEMP                                                         ONLINE
USERS

(3) 접속 가능한 사용자를 확인한다.
SQL> SELECT username, account_status FROM dba_users
  2  WHERE account_status = 'OPEN';


USERNAME        ACCOUNT_STATUS
--------------- --------------------
SYSTEM          OPEN
SYS             OPEN
ANONYMOUS       OPEN
SCOTT           OPEN

데이터가 숫자일 경우
COL empno FOR 9999
의미: empno라는 컬럼의 길이를 숫자 4자리까지 들어가게 설정하세요

데이터가 문자일 경우
COL ename FOR a8
ename이란 컬럼의 길이를 8바이트까지 들어가게 설정하세요

한 화면에 출력 가능한 줄 길이 설정(가로 길이 설정)
set line 200
한 화면을 가로로 200바이트까지 출력되게 하세요.

한페이지에 출력 가능한 줄 수 설정(세로 길이 설정)
SET PAGES 50

(4) st 계정 생성
SQL> CREATE USER st IDENTIFIED BY 1234   [사용자] [암호]
  2  DEFAULT TABLESPACE users		 [테이블스페이스]	
  3  TEMPORARY TABLESPACE temp		 [임시테이블스페이스]
  4  QUOTA UNLIMITED ON users;

User created.

SQL> SELECT username, account_status FROM dba_users
  2  WHERE account_status = 'OPEN';

USERNAME        ACCOUNT_STATUS
--------------- --------------------
SYSTEM          OPEN
SYS             OPEN
ST              OPEN
ANONYMOUS       OPEN
SCOTT           OPEN

(5) 권한 부여
SQL> GRANT connect, resource, create view TO st;

Grant succeeded.


(6) 접속확인 
SQL> exit
Disconnected from Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

C:\Users\woongkeun>sqlplus

SQL*Plus: Release 11.2.0.2.0 Production on 월 8월 3 07:14:43 2020

Copyright (c) 1982, 2014, Oracle.  All rights reserved.

Enter user-name: st
Enter password:

Connected to:
Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

SQL>@D:\sample\samle.sql 


데이터가 숫자일 경우
 col username for a10
username이라는 컬럼의 길이를 10자리로 설정


--------------------------------------------
SQL> SELECT [ 컬럼, 컬럼, ... |  *] FROM 테이블;
- 테이블로부터 지정한 컬럼을 검색한다.
- '*' 는 모든 컬럼을 검색할 때 사용한다.
- '*'을 통해 검색된 결과의 컬럼의 순서는 DESC명령으로 검색한 컬럼 순서.
- '*' 는 컬럼과 같이 사용할 수 없고 받드시 단독으로 사용한다.
- SELECT절이나 FROM절은 생략할 수 없다.
- SELECT 문은 프리포맷으로 여러 줄에 걸쳐 기술할 수 있다.

SQL>DESC 테이블;
 - 테이블의 구조를 검색한다.
 - 컬럼의 이름, 데이터 타입을 확인

SQL> SELECT * FROM tab;
 - 현재 스키마(shema)의 모든 테이블 목록을 검색
 - tab는 실제 테이블이 아니라 테이블의 목록을 보여주기 위한 가상 테이블이다.
 -오라클에서 스키마는 유저와 동일한 의미를 갖는다.

SQL 문은 반드시 ;으로 끝나다.
SQL 문은 대소문자를 구별하지 않는다.
SQL 문은 반드시 결과(출력)가 존재한다. 

emp(사원)
eno  : 사번
ename :이름
job    : 업무
mgr   : 관라자(사수)사번
hdate :입사일
sal     : 급여(월)
comm : 보너스
dno  : 소속 부서 번호 

사번, 이름, 급여를 검색하고 
검색된 데이터에 따라 출력 


SELECT 절을 이용한 수식 검색
 - SELECT 절에 컬럼과 무관한 수식을 사용할 수 있다.
 - SELECT 절에 컬럼을 포함하지 않는 경우 FROM 
              절에는 더미 테이블명인 dual을 기입한다.



student(학생)테이블
sno  : 학번	
sname : 이름
sex  :성별
syear :학년
major :학과
avr  : 평균평점

professor(교수)테이블
pro:  교수번호
pname:이름
section: 소속학과
orders: 직위
hiredate: 부임일

course(과목)테이블
cno : 과목번호
cname : 과목명
st_num : 학점수
pno : 담당교수 번호

score(기말 고사 점수)테이블
sno : 학번
cno : 과목번호
result : 점수 

scgrade(점수 등급)
grade : 등급
hiscore : 상한값
loscore : 하한값 

1. student, course, professor, score table의구조를 검색하시오.

2. 모든 학생의 정보를 검색하시오.

3. 모든 교수의 정보를 검색하시오.

4. 모든 과목의 정보를 검색하시오.

5.기말고사 시험 점수를 검색하시오.

6. 학생들의 학과와 학년을 검색 하시오.

7. 각 과목의 이름을 검색하시오.

8. 모든 교수의 직위를 검색하시오.
 
9. 각 과목의 학점수와 담당교수 번호를 검색하시오.

10.각 학생들이 속한 학과와 학년을 검색 하시오.


//
SQL> SELECT 컬럼 as "별명", 컬럼 as "별명", ...
        FROM 테이블;

- 별명은 헤더에 출력되는 내용을 바꿔서 검색된 데이터의 해석을 돕는다.
- 예약어 'as'는 생략 가능하다.
- 다음에 해당하는 별명을 사용하는 경우 반드시 " "(이중인용부호)를 사용한다.
   * 공백이 포함된 경우
   * 특수 문자가 포함된 경우(#,$)
   * 대소문자를 구별하고자 할 경우
- 다음 두개의 SQL 문은 동일하다.
  -SELECT eno AS "사원 번호" , ename AS "이름"  FROM emp;
  -SELECT eno "사원 번호", ename "이름" FROM emp;

emp(사원)
eno  : 사번
ename :이름
job    : 업무
mgr   : 관라자(사수)사번
hdate :입사일
sal     : 급여(월)
comm : 보너스
dno  : 소속 부서 번호 

사번, 이름, 급여, 보너스 사원의 연봉을 검색해보자(연봉=12개월분 급여(sal) + 보너스(comm))


NULL 연산을 위한 NVL함수의 사용
 - 컬럼의 NULL을 [치환 값]으로 치환한다.
 - NULL이 아닌 경우 원래 값을 반환한다.


1) 각 학생의 평균 평점을 검색하시오(별명으로)
     SELECT SNO 학번, SNAME 이름 , AVR 평균평점 FROM STUDENT;
2) 각 과목의 학점수를 검색하시오(별명으로)
     SELECT CNO 과목번호, CNAME 과목명, ST_NUM 학점수 FROM COURSE;
3) 각 교수의 교수 번호, 교수 이름 ,  교수 지위를 검색하시오(별명으로)
    SQL> SELECT pno 교수번호, pname 교수이름, orders 지위 FROM professor;

4) 사번, 이름, 급여를 10% 인상했을 때 연간 지급되는 급여를 검색하시오
SELECT eno 사번, ename 이름, sal*12*1.1 "연간 인상급여" FROM emp;
5) 현재 학생의 평균 평점은 4.0만점이다. 이를 4.5 만점으로 환산해서 검색하시오
     select sno 학번 , sname 이름, avr 평점 FROM student;
6) 급여가 10% 인상될 경우 각 사원의 연봉을 검색하시오.
  SELECT eno 사번, ename 이름, sal*12*1.1+NVL(comm,0) "연간 인상급여" FROM emp;
7)1년 동안 지급되는 급여와 10% 인상되어 1년 동안 지급되는 급여 간에
   차액을 검색하시오.
   SELECT eno 사번, ename 이름, (sal*12*1.1)-(sal*12) "연간 수급액 차" FROM emp;
8)각 학생들의 평균평점을 4.5 만점으로 환산한 경우 각각 평점의 상승폭은
  얼마인지 검색하시오. 
   select sno 학번 , sname 이름, (avr*4.5/4.0)-avr "환산학점_증가분" FROM student;

--연결 연산자와 중복 제거
--사원의 이름을 급여와 업무를 하나로 합쳐서 출력하시오.
SQL> SELECT 컬럼 || '리터럴' || .....   FROM 테이블;
 - 연결 연산자(||)는 리터럴이나 컬럼을 하나의 문자열로 검색한다.
 - 리터럴이란 SQL문에 쓰인 문자,숫자,날짜를 의미한다.
 - 연결 연산자는 SELECT 문을 이용 다양한 문장을 만들때 많이 사용된다.

SQL> SELECT ename || sal || job from emp;

SQL> SELECT ename || ' ' ||sal 이름_급여 FROM emp;

SQL> SELECT ename||'의 업무는 '||job||'입니다.'  FROM emp;


중복제거
SQL>SELECT [ DISTINCT | ALL ] 컬럼, 컬럼, ...   FROM 테이블;
 -DISTINCT :중복된 값은 한번만 출력한다.
 -ALL : 중복된 값을 모두 출력한다.(기본값)

SQL> SELECT DISTINCT  job 업무 FROM emp;

1) ___학과인 ___학생은 현재 평점은 ___입니다. 형태로 학생의 정보를 출력하시오.
SELECT MAJOR || '학과인 ' || SNAME || '학생은 현재 평점은 '|| AVR||'입니다.'
      FROM STUDENT;
2) ___과목은 ___학점 과목입니다. 형태로 과목의 정보를 출력하시오.
 SELECT CNAME || ' 과목은 ' || ST_NUM || '학점 과목입니다' FROM course;
3) ___교수는 ___학과 소속입니다.
 SELECT PNAME || ' 교수는 ' || SECTION || ' 학과 소속입니다.' FROM PROFESSOR;
4)학교에는 어떤학과가 있는지 검색하시오(학생 테이블 기반으로 검색 중복없이)
 SELECT DISTINCT major FROM student;
5)학교에는 어떤 학과가 있는지 검색하시오(교수 테이블 기반으로 검색 중복없이)
 SELECT DISTINCT section FROM professor;
6) ___학생의 4.5 환산 평점은 ___입니다. 
SELECT sname || '학생의 4.5 환산 평점은 ' ||  (avr*4.5)/4.0 || ' 입니다.' 
    FROM  STUDENT;
7)___과목의 담당 교수 번호는 ___입니다.
  SELECT SECTION || ' 과목은 담당 교수 번호는 ' || PNO || ' 입니다' 
  FROM PROFESSOR;
8)학교에 개설된 과목들은 몇 학점짜리인지 검색하시오(중복없이).
   SELECT DISTINCT cname, st_num FROM course;
9)학생들이 수강중인 과목의 과목번호를 검색하시오.(중복없이)
   SELECT DISTINCT  cno FROM score;


--정렬과 묶음 검색 
SQL > SELECT [ DISTINCT | ALL ] 컬럼, 컬럼, ...
         FROM 테이블
         ORDER BY 컬럼 [ASC/DESC], 컬럼[ASC/DESC] ....
 -  ORDER BY : 지정된 컬럼을 대상으로 정렬을 수행한다.
 -  ASC는 오름차순 정렬, DESC는 내림차순 정렬을 지정한다.
     - 지정하지 않으면 ASC가 기본 값
 - 정렬대상인 컬럼이 여러 개인 경우 앞에 지정한 컬럼이 동일 한 
   값에 대해서  뒤에 지정된 컬럼으로 정렬된다. 즉 앞쪽 컬럼의 정렬이
   깨지지 않는 범위 내에서 다음 컬럶으로 정렬을 수행한다.

사원의 이름을 급여 순으로 검색하시오. 
SELECT ENO 사번 , ENAME 이름, SAL 급여 FROM emp ORDER BY sal DESC;

사원의 사번과 이름을 연봉 순으로 검색하시오.
SQL> SELECT eno 사번, ename 이름 , sal*12+NVL(comm, 0) 연봉 FROM emp
     ORDER BY sal*12+NVL(comm,0);

SQL> SELECT eno 사번, ename 이름 , sal*12+NVL(comm, 0) 연봉 FROM emp
     ORDER BY 연봉 ;

SQL> SELECT eno 사번, ename 이름 , sal*12+NVL(comm, 0) 연봉 FROM emp
        ORDER BY 연봉  DESC ;

SQL> SELECT eno, ename, sal FROM emp ORDER BY eno;
SQL> SELECT eno, ename, sal FROM emp ORDER BY 1;
SQL> SELECT eno, ename, sal FROM emp ORDER BY 2;
SQL> SELECT eno, ename, sal FROM emp ORDER BY 3;


#)각 부서별로 사원의 급여를 검색한다 단 급여를 많이 받는 사람부터 검색한다.
SQL> SELECT dno 부서번호, eno 사번, ename 이름 , sal 급여 FROM emp
  2  ORDER BY 부서번호, 급여 DESC;

1) 성적순으로 학생의 이름을 검색하시오.
2) 학과별 성적순으로 학생의 정보를 검색하시오.
3) 학년별 성적순으로 학생의 정보를 검색하시오.
4)학과별 학년별의 학생의 정보를 성적순으로 검색하시오.
5)학점 순으로 과목 이름을 검색하시오
6) 각 학과별로 교수의 정보를 검색하시오.
7)지위별로 교수의 정보를 검색하시오.
8) 각 학과별로 교수의 정보를 부임일자 순으로 검색하시오.
9)급여가 10% 인상된 경우 부서별로 각 사원의 연봉을 연봉순으로 검색하시오.
10) 보너스가 100% 인상된 경우 업무별로 각 사원의 연봉을 연봉순으로 검색하시오.





























